# API spec in YAML
swagger: '2.0'
info:
  title: Renga Storage API
  description: |
    Storage API specification
  version: '0.0.1'
# Host and schemes are injected by the service
# will be prefixed to all paths
basePath: /api/storage
tags:
- name: 'storage-io'
  description: 'Perform I/O operations'
- name: 'storage-info'
  description: 'Storage information'
paths:
  /info:
    get:
      tags:
        - 'storage-info'
      summary: 'List activated capabilities'
      description: 'Lists the activated capabilities for this version of the Renga Storage API.'
      responses:
        200:
          description: 'Ok'
          schema:
            type: object
            properties:
              backends:
                type: array
                items:
                  $ref: '#/definitions/Backend'

  /{bucket_id}:
    options:
      tags:
        - 'storage-io'
      summary: 'Request information about bucket access'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
      responses:
        $ref: '#/definitions/OptionsResponses'

    put:
      tags:
        - 'storage-io'
      summary: 'Create bucket'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
        - in: body
          name: bucket
          description: New bucket to be added.
          required: true
          schema:
            $ref: '#/definitions/NewBucket'
      responses:
        201:
          description: creation successful
          schema:
            $ref: '#/definitions/Bucket'

    get:
      tags:
        - 'storage-io'
      summary: 'Show bucket metadata'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Bucket'

    post:
      tags:
        - 'storage-io'
      summary: 'Create, update, or delete bucket metadata'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
      responses:
        200:
          desciption: operation successful
          schema:
            $ref: '#/definitions/Bucket'

    delete:
      tags:
        - 'storage-io'
      summary: 'Delete data from the bucket'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket to delete
          required: true
          type: string
      responses:
        200:
          description: OK

  /{bucket_id}/{object_id}:
    options:
      tags:
        - 'storage-io'
      summary: 'Request information about object access'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
        - name: object_id
          in: path
          description: ID of the object
          required: true
          type: string
      responses:
        $ref: '#/definitions/OptionsResponses'

    put:
      tags:
        - 'storage-io'
      summary: 'Upload or replace object'
      description: >
        It is recommended to check if it is possible to upload
        data by using OPTIONS method with same headers.
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
        - name: object_id
          in: path
          description: ID of the object
          required: true
          type: string
      responses:
        200:
          description: OK

    get:
      tags:
        - 'storage-io'
      summary: 'Download object'
      parameters:
        - name: bucket_id
          in: path
          description: ID of the bucket
          required: true
          type: string
        - name: object_id
          in: path
          description: ID of the object
          required: true
          type: string
      responses:
        200:
          description: OK

definitions:
  Backend:
    type: string
    default: local
    enum:
    - "local"
    - "swift"

  NewBucket:
    type: object
    required:
      - name
      - backend
    properties:
      name:
        type: string
      backend:
        $ref: '#/definitions/Backend'

  Bucket:
    type: object
      required:
      - id
      properties:
        id:
          type: string
          description: 'Id of the created bucket'

  OptionsResponses:
    default:
      description: >
        Indicate which methods can a user perform
        with given Authorization header.
      headers:
        Access-Control-Allow-Methods:
        type: array
        collectionFormat: csv
        default: OPTIONS
        description: >
          Return methods that a user is allowed to perform
          with given Authorization header.
