# API spec in YAML
swagger: '2.0'
info:
  title: Storage API
  description: |
    Storage API specification
  version: '0.0.1'
# Host and schemes are injected by the service
# will be prefixed to all paths
basePath: /api/storage
produces:
  - application/json
consumes:
  - application/json
tags:
- name: 'Storage-Authorize'
  description: 'Request access to file resources'
- name: 'Storage-IO'
  description: 'Perform I/O operations'
paths:
  /io/backends:
    get:
      tags:
      - 'Storage-IO'
      summary: 'Backend list'
      description: 'List all available backends'
      responses:
        200:
          description: 'Ok'
      security:
      - token_auth:
        - 'profile'

  /io/read:
    get:
      tags:
      - 'Storage-IO'
      summary: 'Read file'
      description: 'Read file specified in authorization bearer token'
      parameters:
      - name: Authorization
        in: header
        description: 'Bearer token (from authorization request)'
        required: true
        type: string
        example: "Bearer "
      responses:
        200:
          description: 'Successful read'

  /io/write:
    post:
      tags:
      - 'Storage-IO'
      summary: 'Write file'
      description: 'Read file specified in authorization bearer token'
      consumes:
      - application/octet-stream
      - text/plain
      parameters:
      - name: Authorization
        in: header
        description: |
          Bearer token (from authorization request)

          Note: any MIME type can be used
        required: true
        type: string
        example: "Bearer "
      - name: body
        in: body
        description: 'File content'
        required: true
        schema:
          type: string
          format: binary
      responses:
        200:
          description: 'Successful write'

  /authorize/read:
    post:
      tags:
      - 'Storage-Authorize'
      summary: 'Request read access to a file'
      description: 'Request read access to a file and retrieve access token for I/O calls'
      parameters:
      - name: body
        in: body
        description: 'Read file request object'
        required: true
        schema:
          $ref: '#/definitions/ReadFileRequest'
      - name: Renga-Deployer-Execution
        in: header
        description: 'Deployment id, passed if request made from deployed application'
        type: integer
        format: int64
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/AccessGrant'
      security:
      - token_auth:
        - 'profile'

  /authorize/write:
    post:
      tags:
      - 'Storage-Authorize'
      summary: 'Request write access to a file'
      description: 'Request write access to a file and retrieve access token for I/O calls'
      parameters:
      - name: body
        in: body
        description: 'Write file request object'
        required: true
        schema:
          $ref: '#/definitions/WriteFileRequest'
      - name: Renga-Deployer-Execution
        in: header
        description: 'Deployment id, passed if request made from deployed application'
        type: integer
        format: int64
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/AccessGrant'
      security:
      - token_auth:
        - 'profile'

  /authorize/create_bucket:
    post:
      tags:
      - 'Storage-Authorize'
      summary: 'Request creation of a bucket'
      description: 'Request the creation of a new bucket on the given backend'
      parameters:
      - name: body
        in: body
        description: 'Create bucket request object'
        required: true
        schema:
          $ref: '#/definitions/CreateBucketRequest'
      - name: Renga-Deployer-Execution
        in: header
        description: 'Deployment id, passed if request made from deployed application'
        type: integer
        format: int64
      - name: Renga-Projects-Project
        in: header
        description: 'Project id, passed to make this bucket part of a project'
        type: integer
        format: int64
      responses:
        201:
          description: ok
          schema:
            type: object
            required:
            - id
            properties:
              id:
                type: integer
                format: int64
                description: 'Id of the created bucket'
      security:
      - token_auth:
        - 'profile'

  /authorize/create_file:
    post:
      tags:
      - 'Storage-Authorize'
      summary: 'Request creation of a new file'
      description: 'Request the creation of a new file in the given bucket and retrieve access token for I/O calls'
      parameters:
      - name: body
        in: body
        description: 'Create file request object'
        required: true
        schema:
          $ref: '#/definitions/CreateFileRequest'
      - name: Renga-Deployer-Execution
        in: header
        description: 'Deployment id, passed if request made from deployed application'
        type: integer
        format: int64
      - name: Renga-Projects-Project
        in: header
        description: 'Project id, passed to make this file explicitly part of a project'
        type: integer
        format: int64
      responses:
        201:
          description: ok
          schema:
            type: object
            allOf:
            - $ref: '#/definitions/AccessGrant'
            - type: object
              required:
              - id
              properties:
                id:
                  type: integer
                  format: int64
                  description: 'Id of the created bucket'
      security:
      - token_auth:
        - 'profile'

definitions:
  ReadFileRequest:
    type: object
    required:
      - resource_id
      - request_type
    properties:
      resource_id:
        type: integer
        format: int64
      request_type:
        type: string
        enum:
          - "read_file"
  WriteFileRequest:
    type: object
    required:
      - resource_id
      - request_type
    properties:
      resource_id:
        type: integer
        format: int64
      request_type:
        type: string
        enum:
          - "write_file"
  CreateBucketRequest:
    type: object
    required:
      - name
      - backend
      - request_type
    properties:
      name:
        type: string
      backend:
        type: string
        enum:
          - "local"
          - "swift"
      request_type:
        type: string
        enum:
          - "create_bucket"
      labels:
        type: array
        items:
          type: string
  CreateFileRequest:
    type: object
    required:
      - bucket_id
      - file_name
      - request_type
    properties:
      bucket_id:
        type: integer
        format: int64
      file_name:
        type: string
      request_type:
        type: string
        enum:
          - "create_file"
      labels:
        type: array
        items:
          type: string
  AccessGrant:
    type: object
    required:
    - access_token
    properties:
      access_token:
        type: string
        description: Authorization token
securityDefinitions:
  token_auth:
    type: "oauth2"
    flow: "implicit"
    scopes:
      profile: user profile
