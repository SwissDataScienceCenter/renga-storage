# API spec in YAML
swagger: '2.0'
info:
  title: Storage API
  description: |
    Storage API specification
  version: '0.1.0'
# Host and schemes are injected by the service
# will be prefixed to all paths
basePath: /api/storage
produces:
  - application/json
consumes:
  - application/json
tags:
- name: 'Storage-Backend'
  description: 'Information about the storage backends'
- name: 'Storage-Object'
  description: 'Manipulating file objects'
- name: 'Storage-Repository'
  description: 'Repositories can be for objects or git'
paths:
  /backends:
    get:
      tags:
      - 'Storage-Backend'
      summary: 'Backend list'
      description: 'List all available backends'
      responses:
        200:
          description: 'Ok'
      security:
      - token_auth:
        - 'profile'

  /repo/{uuid}/object/{oid}:
    get:
      tags:
      - 'Storage-Object'
      summary: 'Download object'
      description: 'Download the given object, support for Range header'
      parameters:
      - description: uuid of the repository
        in: path
        name: uuid
        required: true
        type: string
      - description: object uuid
        in: path
        name: oid
        required: true
        type: string
      responses:
        200:
          description: 'Successful download'
      security:
      - token_auth:
        - 'profile'
    put:
      tags:
      - 'Storage-Object'
      summary: 'Upload object'
      description: 'Upload the given object'
      consumes:
      - application/octet-stream
      - text/plain
      parameters:
      - description: uuid of the repository
        in: path
        name: uuid
        required: true
        type: string
      - description: object uuid
        in: path
        name: oid
        required: true
        type: string
      - name: Content-Filename
        in: header
        description: 'Friendly name for the file, otherwise uses the oid'
        type: string
      - name: Content-Hash
        in: header
        description: 'sha256 as given by git LFS oid, used for verifying the uploaded content'
        type: string
      - name: body
        in: body
        description: 'File content'
        required: true
        schema:
          type: string
          format: binary
      responses:
        201:
          description: 'Successful upload'
      security:
      - token_auth:
        - 'profile'
    post:
      tags:
      - 'Storage-Object'
      summary: 'Upload object'
      description: 'Upload the given object'
      consumes:
      - application/octet-stream
      - text/plain
      parameters:
      - description: uuid of the repository
        in: path
        name: uuid
        required: true
        type: string
      - description: object uuid
        in: path
        name: oid
        required: true
        type: string
      - name: Content-Filename
        in: header
        description: 'Friendly name for the file, otherwise uses the oid'
        type: string
      - name: Content-Hash
        in: header
        description: 'sha256 as given by git LFS oid, used for verifying the uploaded content'
        type: string
      - name: body
        in: body
        description: 'File content'
        required: true
        schema:
          type: string
          format: binary
      responses:
        201:
          description: 'Successful upload'
      security:
      - token_auth:
        - 'profile'

  /repo/{uuid}/object:
    get:
      tags:
      - 'Storage-Object'
      summary: 'Get the list of objects'
      description: 'Get the list of objects in the given repository'
      parameters:
      - description: uuid of the repository
        in: path
        name: uuid
        required: true
        type: string
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/FileObject'
      security:
      - token_auth:
        - 'profile'

  /object/{uuid}:
    get:
      tags:
      - 'Storage-Object'
      summary: 'Get the object'
      description: 'Get the object metadata'
      parameters:
      - description: uuid of the object
        in: path
        name: uuid
        required: true
        type: string
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/FileObject'
      security:
      - token_auth:
        - 'profile'
    put:
      tags:
      - 'Storage-Object'
      summary: 'Update object'
      description: 'Update object metadata'
      parameters:
      - description: uuid of the object
        in: path
        name: uuid
        required: true
        type: string
      - name: body
        in: body
        description: 'FileObject object'
        required: true
        schema:
          $ref: '#/definitions/FileObject'
      responses:
        200:
          description: ok
      security:
      - token_auth:
        - 'profile'

  /repo:
    get:
      tags:
      - 'Storage-Repository'
      summary: 'Get the list of repositories'
      description: 'Get the list of repositories'
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/Repository'
      security:
      - token_auth:
        - 'profile'
    post:
      tags:
      - 'Storage-Repository'
      summary: 'Create a new repositories'
      description: 'Create a new repositories'
      parameters:
      - name: body
        in: body
        description: 'Repository object'
        required: true
        schema:
          $ref: '#/definitions/Repository'
      responses:
        200:
          description: ok
      security:
      - token_auth:
        - 'profile'

  /repo/{uuid}:
    get:
      tags:
      - 'Storage-Repository'
      summary: 'Get a repository'
      description: 'Get a repository'
      parameters:
      - description: uuid of the repository
        in: path
        name: uuid
        required: true
        type: string
      responses:
        200:
          description: ok
          schema:
            $ref: '#/definitions/Repository'
      security:
      - token_auth:
        - 'profile'
    put:
      tags:
      - 'Storage-Repository'
      summary: 'Update a repository'
      description: 'Update a repository'
      parameters:
      - description: uuid of the repository
        in: path
        name: uuid
        required: true
        type: string
      - name: body
        in: body
        description: 'Repository object'
        required: true
        schema:
          $ref: '#/definitions/Repository'
      responses:
        200:
          description: ok
      security:
      - token_auth:
        - 'profile'

definitions:

  Repository:
    type: object
    required:
      - uuid
      - description
      - path
      - backend
    properties:
      uuid:
        type: string
      iid:
        type: string
      description:
        type: string
      path:
        type: string
      created:
        type: string
      backend:
        type: object
        properties:
          name:
            type: string
      owner:
        type: string
      lfs_store:
        type: string
  FileObject:
    type: object
    required:
      - uuid
      - description
      - name
    properties:
      uuid:
        type: string
      hash:
        type: string
      description:
        type: string
      name:
        type: string
      created:
        type: string
      owner:
        type: string
securityDefinitions:
  token_auth:
    type: "oauth2"
    flow: "implicit"
    scopes:
      profile: user profile
